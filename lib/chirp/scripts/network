#!/usr/bin/env bash

set -o errexit

main() {
  : "${TMPDIR:=/var/tmp}"
  : "${CHIRP_SCRATCH:=${TMPDIR}/chirp-network}"

  __setup
  __parallel_download_test
  __s3_updown_test
}

__setup() {
  gem install aws-sdk-s3
}

__parallel_download_test() {
  if [[ ! "${CHIRP_NETWORK_URLS}" ]]; then
    CHIRP_NETWORK_URLS="
      https://apt.postgresql.org/pub/repos/apt/dists/trusty-pgdg/9.4/binary-amd64/
      http://archive.debian.org/debian/dists/lenny/main/binary-ia64/
      http://dev.mysql.com/get/mysql-apt-config_0.3.2-1ubuntu14.10_all.deb
      https://developer.android.com/ndk/
      http://ppa.launchpad.net/chris-lea/redis-server/ubuntu/dists/trusty/main/binary-amd64/
      http://us.archive.ubuntu.com/ubuntu/dists/bionic/main/binary-amd64/
      https://www.google.com
      https://bitbucket.org/pypy/pypy/src/tip/pypy/test_all.py
      https://github.com/rails/rails/tree/master/Gemfile
      https://registry.npmjs.org/express
      https://s3.amazonaws.com/travis-blue-public/fake-cache-blob.bin
      https://s3.amazonaws.com/travis-build-examples/index.html
      https://travis-ci.org/travis-ci/chirp
      https://www.npmjs.com/package/express
    "
  fi

  URLS=(${CHIRP_NETWORK_URLS})

  for url in "${URLS[@]}"; do
    curl -o /dev/null -sSL "$url" &
  done

  wait
}

__s3_updown_test() {
  : "${AWS_REGION:=us-east-1}"
  : "${CHIRP_NETWORK_S3_BUCKET:=travis-ci-chirp-artifacts}"

  local s3key="${DIST:-unknown}/${QUEUE:-unknown}/${SITE:-unknown}"
  s3key="${s3key}/test.$(date +%s).txt"
  local bn="$(basename "${s3key}")"

  pushd "${CHIRP_SCRATCH}"
  dd if=/dev/zero of="./${bn}" bs=1M count=100
  sync

  ruby -r aws-sdk-s3 <<EORUBY
Aws::S3::Resource.new(region: "${AWS_REGION}")
  .bucket("${CHIRP_NETWORK_S3_BUCKET}")
  .object("${s3key}")
  .upload_file("${bn}")

Aws::S3::Client.new(region: "${AWS_REGION}")
  .put_object_acl(
    bucket: "${CHIRP_NETWORK_S3_BUCKET}",
    acl: 'public-read',
    key: "${s3key}"
  )
EORUBY

  curl -o "./${bn}.down" -sSL \
    "https://s3.amazonaws.com/${CHIRP_NETWORK_S3_BUCKET}/${s3key}"

  ruby -r aws-sdk-s3 <<EORUBY
Aws::S3::Resource.new(region: "${AWS_REGION}")
  .bucket("${CHIRP_NETWORK_S3_BUCKET}")
  .object("${s3key}")
  .delete
EORUBY
}

main "${@}"
